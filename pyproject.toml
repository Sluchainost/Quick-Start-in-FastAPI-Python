[project]
name = "Quick-Start-in-FastAPI-Python"
version = "0.1.0"
description = "Quick Start in FastAPI Project"
authors = [
    { name = "LID6393", email = "aksberry77@gmail.com" }
]
license = { text = "MIT" }
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
requires-python = ">=3.12"

dependencies = [
    "alembic>=1.15.1,<2.0.0",
    "anyio>=4.8.0,<5.0.0",
    "asyncpg>=0.30.0,<1.0.0",
    "attrs>=25.3.0,<26.0.0",
    "certifi>=2025.1.31,<2026.0.0",
    "charset-normalizer>=3.4.1,<4.0.0",
    "click>=8.1.8,<9.0.0",
    "cryptography>=44.0.1,<45.0.0",
    "databases>=0.9.0,<1.0.0",
    "dnspython>=2.7.0,<3.0.0",
    "email-validator>=2.2.0,<3.0.0",
    "fastapi>=0.115.8,<1.0.0",
    "fastjsonschema>=2.21.1,<3.0.0",
    "h11>=0.14.0,<0.15.0",
    "httpcore>=1.0.7,<2.0.0",
    "idna>=3.10,<4.0.0",
    "itsdangerous>=2.2.0,<3.0.0",
    "jinja2>=3.1.5,<4.0.0",
    "jsonschema>=4.23.0,<5.0.0",
    "jsonschema-specifications>=2024.10.1,<2025.0.0",
    "jwt>=1.3.1,<2.0.0",
    "mako>=1.3.9,<2.0.0",
    "packaging>=24.2,<25.0.0",
    "passlib>=1.7.4,<2.0.0",
    "platformdirs>=4.3.6,<5.0.0",
    "psycopg2-binary>=2.9.10,<3.0.0",
    "pydantic>=2.10.6,<3.0.0",
    "pydantic-extra-types>=2.10.2,<3.0.0",
    "pydantic-settings>=2.8.0,<3.0.0",
    "python-dateutil>=2.9.0.post0,<3.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
    "python-multipart>=0.0.20,<0.1.0",
    "pyyaml>=6.0.2,<7.0.0",
    "referencing>=0.36.2,<1.0.0",
    "requests>=2.32.3,<3.0.0",
    "rpds-py>=0.23.1,<1.0.0",
    "six>=1.17.0,<2.0.0",
    "sniffio>=1.3.1,<2.0.0",
    "sqlalchemy>=2.0.38,<3.0.0",
    "starlette>=0.45.3,<1.0.0",
    "stack-data>=0.6.3,<1.0.0",
    "typing-extensions>=4.12.2,<5.0.0",
    "urllib3>=2.3.0,<3.0.0",
    "uvicorn>=0.34.0,<1.0.0",
    "watchfiles>=1.0.4,<2.0.0",
    "wcwidth>=0.2.13,<1.0.0",
    "black>=25.1.0",
    "isort>=6.0.1",
    "codespell>=2.4.1",
    "pylint>=3.3.7",
    "mypy>=1.15.0",
    "httpx>=0.28.1",
    "mccabe>=0.7.0",
    "astroid>=3.3.10",
    "mypy-extensions>=1.1.0",
    "pathspec>=0.12.1",
    "tomlkit>=0.13.2",
    "pytest>=8.2.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "factory-boy>=3.3.0",
    "fastapi-babel (>=1.0.0,<2.0.0)",
    "inflection (>=0.5.1,<0.6.0)"
]

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.black]
line-length = 79
target-version = ['py312']
exclude = """
    .*/\\.venv/.* |
    .*/\\.eggs |
    .*/\\.git |
    .*/\\.hg |
    .*/\\.mypy_cache/.* |
    .*/\\.qodo/.* |
    .*/\\.tox |
    .*/_build |
    .*/buck-out |
    .*/build |
    .*/dist |
    .*/alembic/.* |
    .*/tests/.* |
    .*/__pycache__/.* |
    step_2/.* |
    step_3/.* |
    step_4/.* |
    step_5/lesson_5_1/.* |
    step_5/lesson_5_2/.* |
    step_9/lesson_9_2/.* |
    .*/\\.egg-info/.* |
    .*/migrations(/.*)? |
    .*/__init__\\.py
"""

[tool.pylint.'MAIN']
init-hook='import sys; sys.path.append(".")'
jobs = 1
ignore = [".venv", "build", "dist", "docs", "node_modules"]
ignore-paths = [
    ".*/\\.venv/.*",
    ".*/\\.eggs",
    ".*/\\.git",
    ".*/\\.hg",
    ".*/\\.mypy_cache/.*",
    ".*/\\.qodo/.*",
    ".*/\\.tox",
    ".*/_build/.*",
    ".*/buck-out/.*",
    ".*/build/.*",
    ".*/dist/.*",
    ".*/alembic/.*",
    ".*/tests/.*",
    ".*/__pycache__/.*",
    "step_2/.*",
    "step_3/.*",
    "step_4/.*",
    "step_5/lesson_5_1/.*",
    "step_5/lesson_5_2/.*",
    "step_9/lesson_9_2/.*",
    ".*/\\.egg-info/.*",
    ".*/migrations/.*",
    ".*/__init__\\.py",
]

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "missing-docstring",
    "invalid-name",
    "too-few-public-methods",
    "import-error",
    "too-many-arguments",
    "duplicate-code",
    "line-too-long",
    "fixme",
    "unsubscriptable-object",
]

[tool.pylint.'REPORTS']
reports = "no"

[tool.pylint.'FORMAT']
max-line-length = 79

[tool.pylint.'TYPECHECK']
generated-members = ["sqlalchemy.*", "alembic.context.*", "pydantic.BaseModel.*"]

[tool.pylint.'DESIGN']
max-args = 10

[tool.pylint.'SIMILARITIES']
ignore-comments = "yes"
ignore-docstrings = "yes"
min-similarity-lines = 4

[tool.pylint.'LOGGING']
logging-format-style = "new"

[tool.pylint.'EXCEPTIONS']
overgeneral-exceptions = ["builtins.Exception"]

[tool.pytest.ini_options]
addopts = "-ra -q"
python_files = "test_*.py *_test.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
exclude = [
    ".*/\\.venv/.*",
    ".*/\\.eggs",
    ".*/\\.git",
    ".*/\\.hg",
    ".*/\\.mypy_cache/.*",
    ".*/\\.qodo/.*",
    ".*/\\.tox",
    ".*/_build/.*",
    ".*/buck-out/.*",
    ".*/build/.*",
    ".*/dist/.*",
    ".*/alembic/.*",
    ".*/tests/.*",
    ".*/__pycache__/.*",
    "step_2/.*",
    "step_3/.*",
    "step_4/.*",
    "step_5/lesson_5_1/.*",
    "step_5/lesson_5_2/.*",
    "step_9/lesson_9_2/.*",
    ".*/\\.egg-info/.*",
    ".*/migrations/.*",
    ".*/__init__\\.py",
]
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
